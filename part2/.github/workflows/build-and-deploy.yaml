name: docker-build

on:
  push:
    branches: master
  pull_request:
    branches: master

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment
        run: |
          echo "APP=${GITHUB_REPOSITORY##*/}" >> ${GITHUB_ENV}
          export BRANCH=$( [ -n "${GITHUB_HEAD_REF}" ] && echo ${GITHUB_HEAD_REF#refs/*/} || echo ${GITHUB_REF#refs/*/} ) 
          echo "BRANCH=${BRANCH}" >> ${GITHUB_ENV}
          echo "BRANCH_SLUG=$(echo -n ${BRANCH} | tr -c '[:alnum:]-_.' '.')" >> ${GITHUB_ENV}
          echo "BRANCH_BASE=${GITHUB_BASE_REF#refs/*/}" >> ${GITHUB_ENV}
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          ssh-key: ${{ secrets.BUSUUBUILDBOT_SSH_KEY_PRIVATE }}
      - name: Configure AWS credentials
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Login to Amazon ECR
        if: ${{ github.ref == 'refs/heads/master' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Ensure repository exists
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          aws ecr describe-repositories --repository-names ${APP} || aws ecr create-repository --repository-name ${APP}
      - name: Set up BuildX
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true
      - name: Cache image layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.BRANCH }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.BRANCH }}
            ${{ runner.os }}-buildx-${{ env.BRANCH_BASE }}
            ${{ runner.os }}-buildx
      - name: Build image
        uses: docker/build-push-action@v2
        env:
          REPO: ${{ steps.login-ecr.outputs.registry || 'local' }}
        with:
          push: ${{ github.ref == 'refs/heads/master' }}
          context: .
          build-args: |
            REACT_APP_BASE_URL=https://courses-service.k8s.eu-west-1.non-prod.busuu.net/courses-service/
            REACT_APP_AUTHORIZATION_TOKEN=${{ secrets.REACT_APP_AUTHORIZATION_TOKEN }}
          tags: |
            ${{ env.REPO }}/${{ env.APP }}:${{ github.sha }}
            ${{ env.REPO }}/${{ env.APP }}:${{ env.BRANCH_SLUG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy-staging:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    needs:
      - build-container
    steps:
      - name: Set up environment
        run: |
          echo "APP=${GITHUB_REPOSITORY##*/}" >> ${GITHUB_ENV}
          export BRANCH=$( [ -n "${GITHUB_HEAD_REF}" ] && echo ${GITHUB_HEAD_REF#refs/*/} || echo ${GITHUB_REF#refs/*/} ) 
          echo "BRANCH=${BRANCH}" >> ${GITHUB_ENV}
          echo "BRANCH_SLUG=$(echo -n ${BRANCH} | tr -c '[:alnum:]-_.' '.')" >> ${GITHUB_ENV}
          echo "BRANCH_BASE=${GITHUB_BASE_REF#refs/*/}" >> ${GITHUB_ENV}
      - name: Checkout staging repo
        uses: actions/checkout@v2
        with:
          repository: Busuu/k8s-non-prod-cluster-state
          ssh-key: ${{ secrets.BUSUUBUILDBOT_SSH_KEY_PRIVATE }}
      - name: Install yq
        env:
          YQ_VERSION: 3.4.1
          YQ_BINARY: yq_linux_amd64
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
      - name: Update application image
        run: |
          yq write --inplace busuu-app-images.yaml ${APP} ${{ github.sha }}
      - name: Commit & push
        run: |
          git config --global user.name BusuuBuildBot
          git config --global user.email platform@busuu.com 
          git commit --signoff --message "Automated image update for courses-service for ${{ github.actor }}" --message "https://github.com/${{ github.repository }}/commit/${{ github.sha }}" -- busuu-app-images.yaml
          git push
